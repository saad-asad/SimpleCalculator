{"ast":null,"code":"var _jsxFileName = \"/home/saad/Js Apps/SimpleCalculator/src/Components/Calculator/Calculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { evaluate } from 'mathjs';\nimport { Grid, Typography } from '@material-ui/core';\nimport { ButtonRows } from './ButtonRows';\nimport { useStyles } from './Style/CalculatorStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = props => {\n  _s();\n\n  const classes = useStyles();\n  let [expression, setExpression] = useState('');\n  const [result, setResult] = useState(undefined);\n  const [error, setError] = useState(undefined);\n\n  const evaluateExpression = () => {\n    try {\n      setExpression(evaluate(expression));\n      setResult(evaluate(expression));\n    } catch (error) {\n      setError('Invalid Expression');\n      setExpression('');\n    }\n  };\n\n  const appendToExpression = value => {\n    if (error) setError(undefined);\n\n    if (result && !['+', '-', '*', '/', '(', ')'].includes(value)) {\n      setExpression(value);\n    } else setExpression(expression += value);\n\n    setResult(undefined);\n  };\n\n  const buttonRowsData = [{\n    label: '(',\n    theme: 'dark',\n    onClick: e => {\n      appendToExpression('(');\n    }\n  }, {\n    label: 'CE',\n    theme: 'dark',\n    onClick: e => {\n      setExpression('');\n    }\n  }, {\n    label: ')',\n    theme: 'dark',\n    onClick: e => {\n      appendToExpression(')');\n    }\n  }, {\n    label: 'C',\n    theme: 'dark',\n    onClick: e => {\n      setExpression('');\n      setError(undefined);\n    }\n  }, {\n    label: '1',\n    onClick: e => {\n      appendToExpression('1');\n    }\n  }, {\n    label: '2',\n    onClick: e => {\n      appendToExpression('2');\n    }\n  }, {\n    label: '3',\n    onClick: e => {\n      appendToExpression('3');\n    }\n  }, {\n    label: '+',\n    theme: 'dark',\n    onClick: e => {\n      appendToExpression('+');\n    }\n  }, {\n    label: '4',\n    onClick: e => {\n      appendToExpression('4');\n    }\n  }, {\n    label: '5',\n    onClick: e => {\n      appendToExpression('5');\n    }\n  }, {\n    label: '6',\n    onClick: e => {\n      appendToExpression('6');\n    }\n  }, {\n    label: '-',\n    theme: 'dark',\n    onClick: e => {\n      appendToExpression('-');\n    }\n  }, {\n    label: '7',\n    onClick: e => {\n      appendToExpression('7');\n    }\n  }, {\n    label: '8',\n    onClick: e => {\n      appendToExpression('8');\n    }\n  }, {\n    label: '9',\n    onClick: e => {\n      appendToExpression('9');\n    }\n  }, {\n    label: '*',\n    theme: 'dark',\n    onClick: e => {\n      appendToExpression('*');\n    }\n  }, {\n    label: '.',\n    onClick: e => {\n      appendToExpression('.');\n    }\n  }, {\n    label: '0',\n    onClick: e => {\n      appendToExpression('0');\n    }\n  }, {\n    label: '=',\n    onClick: e => {\n      evaluateExpression();\n    }\n  }, {\n    label: '/',\n    theme: 'dark',\n    onClick: e => {\n      appendToExpression('/');\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.layout,\n    spacing: 0,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      title: \"screen\",\n      className: classes.screen,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        title: \"screenText\",\n        className: classes.screenText,\n        children: error ? error : expression === '' ? 0 : expression\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonRows, {\n      rows: buttonRowsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calculator, \"2vn3GKL75owgCgMl/wOB5oYFHD4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Calculator;\nexport { Calculator };\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["/home/saad/Js Apps/SimpleCalculator/src/Components/Calculator/Calculator.js"],"names":["React","useState","evaluate","Grid","Typography","ButtonRows","useStyles","Calculator","props","classes","expression","setExpression","result","setResult","undefined","error","setError","evaluateExpression","appendToExpression","value","includes","buttonRowsData","label","theme","onClick","e","layout","screen","screenText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { evaluate } from 'mathjs'\n\nimport { Grid, Typography } from '@material-ui/core';\nimport { ButtonRows } from './ButtonRows'\n\nimport { useStyles } from './Style/CalculatorStyles'\n\nconst Calculator = (props) => {\n\n    const classes = useStyles()\n    let [expression, setExpression] = useState('')\n    const [result, setResult] = useState(undefined)\n    const [error, setError] = useState(undefined)\n    \n    const evaluateExpression = () => {\n        try {\n           setExpression(evaluate(expression))\n           setResult(evaluate(expression))\n        } catch (error) {\n            setError('Invalid Expression')\n            setExpression('')\n        }\n    }\n\n    const appendToExpression = (value) => {\n        if (error)\n            setError(undefined)\n\n        if (result && ![ '+', '-', '*', '/', '(', ')' ].includes(value) ) {\n            setExpression(value)\n        }\n            \n        else\n            setExpression(expression+=value)\n        \n        setResult(undefined)\n    \n    }\n\n    const buttonRowsData = [\n        {label: '(', theme: 'dark', onClick: (e) => {appendToExpression('(')}},\n        {label: 'CE', theme: 'dark',onClick: (e) => { setExpression('') }},\n        {label: ')', theme: 'dark',onClick: (e) => {appendToExpression(')')}},\n        {label: 'C', theme: 'dark',onClick: (e) => { setExpression(''); setError(undefined) }},\n        {label: '1', onClick: (e) => { appendToExpression('1') }},\n        {label: '2', onClick: (e) => { appendToExpression('2') }},\n        {label: '3', onClick: (e) => { appendToExpression('3') }},\n        {label: '+', theme: 'dark',onClick: (e) => { appendToExpression('+') }},\n        {label: '4', onClick: (e) => { appendToExpression('4') }},\n        {label: '5', onClick: (e) => { appendToExpression('5') }},\n        {label: '6', onClick: (e) => { appendToExpression('6') }},\n        {label: '-', theme: 'dark',onClick: (e) => { appendToExpression('-') }},\n        {label: '7', onClick: (e) => { appendToExpression('7') }},\n        {label: '8', onClick: (e) => { appendToExpression('8') }},\n        {label: '9', onClick: (e) => { appendToExpression('9') }},\n        {label: '*', theme: 'dark',onClick: (e) => { appendToExpression('*') }},\n        {label: '.', onClick: (e) => { appendToExpression('.') }},\n        {label: '0', onClick: (e) => { appendToExpression('0') }},\n        {label: '=', onClick: (e) => { evaluateExpression() }},\n        {label: '/', theme: 'dark', onClick: (e) => { appendToExpression('/') }},\n    ]\n    \n    return (\n        <Grid container className={classes.layout} spacing={0}>\n            <Grid item xs={12} title='screen' className={classes.screen}>\n                <Typography title='screenText' className={classes.screenText} >\n                    { error ? error : expression === '' ? 0 : expression}\n                </Typography>\n            </Grid>\n            <ButtonRows rows={buttonRowsData} />\n        </Grid>\n    )\n}\n\nexport { Calculator }"]},"metadata":{},"sourceType":"module"}